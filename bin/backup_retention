#!/usr/bin/env ruby

require 'backup_retention'
require 'thor'

# Describe CLI commands
class CLI < Thor
  class_option :token, :desc => "DigitalOcean Personal Access Token. If not specified, read from DO_TOKEN environment variable"

  def self.exit_on_failure?
    true
  end

  desc "volumes ", "Lists all Volumes considered for auto retention"
  def volumes
    token = pick_token(options)
    BackupRetention.print_info_volumes(token)
  end

  desc 'snapshots ', 'List all Snapshots considered for auto retention'
  def snapshots
    token = pick_token(options)
    BackupRetention.print_info_snapshots(token)
  end

  desc 'backup ', 'Create new Snapshots for ALL Volumes considered for auto retention'
  def backup
    token = pick_token(options)
    BackupRetention.create_backup(token)
  end

  desc 'retain ', 'Retain all Snapshots in the rotation for ALL Volumes considered for auto retention'
  option :daily, type: :numeric, default: 5, desc: 'Number of daily Snapshots to retain'
  option :weekly, type: :numeric, default: 4, desc: 'Number of weekly Snapshots to retain'
  option :monthly, type: :numeric, default: 2, desc: 'Number of monthly Snapshots to retain'
  def retain
    token = pick_token(options)
    BackupRetention.retain_backups(token, options[:daily], options[:weekly], options[:monthly])
  end

  desc 'autorun ', 'Automatically run BACKUP and RETAIN in order. Use this for cronjobs!'
  long_desc <<-LONGDESC
    This is a Meta command. It invokes the BACKUP command first and the RETAIN command after.
    As such, it supports ALL options that are available for BOTH commands!
  LONGDESC
  def autorun
    invoke :backup
    invoke :retain
  end

  private

  # Picks the DigitalOcean Access token from either terminal options or environment variable
  def pick_token(options)
    if options.key?(:token)
      options[:token]
    elsif ENV.key?('DO_TOKEN')
      ENV['DO_TOKEN']
    else
      raise Thor::Error, 'REQUIRED: DigitalOcean Personal Access Token is required.'
    end
  end

end

# Run the CLI
CLI.start(ARGV)